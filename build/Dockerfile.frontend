# Используем официальный образ nginx
FROM nginx:alpine

# Устанавливаем необходимые пакеты
RUN apk add --no-cache \
    curl \
    bash

# Создаем пользователя для безопасности
RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup

# Устанавливаем рабочую директорию
WORKDIR /usr/share/nginx/html

# Копируем статические файлы frontend
COPY services/frontend/ .

# Копируем nginx конфигурацию
COPY /config/nginx.conf /etc/nginx/nginx.conf

# Копируем конфигурацию frontend
COPY config/frontend-config.yml /app/config/config.local.yml

# Создаем директории для nginx и устанавливаем права
RUN mkdir -p /var/log/nginx && \
    mkdir -p /var/cache/nginx && \
    mkdir -p /var/cache/nginx/client_temp && \
    mkdir -p /var/cache/nginx/proxy_temp && \
    mkdir -p /var/cache/nginx/fastcgi_temp && \
    mkdir -p /var/cache/nginx/uwsgi_temp && \
    mkdir -p /var/cache/nginx/scgi_temp && \
    mkdir -p /run && \
    chown -R appuser:appgroup /var/log/nginx && \
    chown -R appuser:appgroup /var/cache/nginx && \
    chown -R appuser:appgroup /run && \
    chown -R appuser:appgroup /usr/share/nginx/html && \
    chown -R appuser:appgroup /etc/nginx/nginx.conf

# Переключаемся на непривилегированного пользователя
USER appuser

# Открываем порт
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Запускаем nginx
CMD ["nginx", "-g", "daemon off;"] 